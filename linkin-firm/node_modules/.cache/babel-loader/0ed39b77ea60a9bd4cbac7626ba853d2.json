{"ast":null,"code":"var _jsxFileName = \"/home/antonio/scripts/freela/project/linkin-firm/src/pages/Contact.jsx\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport location from \"../images/svg/location.svg\";\nimport mail from \"../images/svg/mail.svg\";\nimport phone from \"../images/svg/phone.svg\";\nimport '../styles/contact.css';\nconst portugueseTexts = {\n  title: 'Lorem ipsum dolor sit amet',\n  subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  yourName: 'Seu nome',\n  yourPhone: 'Seu telefone',\n  email: 'Endereço de email',\n  message: 'Mensagem',\n  sendMessage: 'ENVIAR MENSAGEM',\n  invalidData: 'Dados inválidos!'\n};\nconst englishTexts = {\n  title: 'Lorem ipsum dolor sit amet',\n  subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  yourName: 'Your name',\n  yourPhone: 'Your phone',\n  email: 'Email address',\n  message: 'Message',\n  sendMessage: 'SEND MESSAGE',\n  invalidData: 'Invalid Data!'\n};\n\nfunction descriptions(title, subtitle) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title-border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, subtitle));\n}\n\nfunction contactDetails() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: phone,\n    className: \"details-icon\",\n    alt: \"phone-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"+1 999 999 999\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mail,\n    className: \"details-icon\",\n    alt: \"mail-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"info@linkinfirm.com\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: location,\n    className: \"details-icon\",\n    alt: \"location-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"details-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"851 NE 1st Ave - # 1108 Miami, Florida 33132 - USA\")));\n}\n\nfunction textFields(yourName, yourPhone, email, message) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-fields-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-fields-rules name-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, yourName), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    className: \"input-email-phone-name-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-fields-rules phone-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, yourPhone), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"phone\",\n    type: \"text\",\n    className: \"input-email-phone-name-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-fields-rules email-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, email), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    className: \"input-email-phone-name-fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-fields-rules message-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, message), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"message\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction buttonMessage(text) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-send-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, text);\n}\n\nasync function sendEmail(event) {\n  event.preventDefault();\n  const {\n    target\n  } = event;\n  const objToSend = {\n    userName: target[0],\n    userPhone: target[1],\n    userEmail: target[2],\n    message: target[3]\n  };\n  const result = await fetch(`http://url-will-be-here`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(objToSend)\n  }).then(res => res.json());\n\n  if (result.message) {\n    return alert();\n  }\n}\n\nfunction emailContainer({\n  yourName,\n  yourPhone,\n  email,\n  message,\n  sendMessage\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"email-box\",\n    onSubmit: e => sendEmail(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, textFields(yourName, yourPhone, email, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-send-msg-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, buttonMessage(sendMessage))));\n}\n\nfunction descriptionsAndDetailsContainer({\n  title,\n  subtitle\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description-and-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, descriptions(title, subtitle), contactDetails());\n}\n\nfunction contactBody(texts) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, descriptionsAndDetailsContainer(texts), emailContainer(texts));\n}\n\nfunction Contact() {\n  const {\n    location: {\n      pathname\n    }\n  } = window;\n  const namePages = pathname.includes('/en') ? englishTexts : portugueseTexts;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, contactBody(namePages)));\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/antonio/scripts/freela/project/linkin-firm/src/pages/Contact.jsx"],"names":["React","Header","portugueseTexts","title","subtitle","yourName","yourPhone","email","message","sendMessage","invalidData","englishTexts","descriptions","contactDetails","phone","mail","location","textFields","buttonMessage","text","sendEmail","event","preventDefault","target","objToSend","userName","userPhone","userEmail","result","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","alert","emailContainer","e","descriptionsAndDetailsContainer","contactBody","texts","Contact","pathname","window","namePages","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport location from '../images/svg/location.svg';\nimport mail from '../images/svg/mail.svg';\nimport phone from '../images/svg/phone.svg';\nimport '../styles/contact.css';\n\nconst portugueseTexts = {\n  title: 'Lorem ipsum dolor sit amet',\n  subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  yourName: 'Seu nome',\n  yourPhone: 'Seu telefone',\n  email: 'Endereço de email',\n  message: 'Mensagem',\n  sendMessage: 'ENVIAR MENSAGEM',\n  invalidData: 'Dados inválidos!'\n};\n\nconst englishTexts = {\n  title: 'Lorem ipsum dolor sit amet',\n  subtitle: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  yourName: 'Your name',\n  yourPhone: 'Your phone',\n  email: 'Email address',\n  message: 'Message',\n  sendMessage: 'SEND MESSAGE',\n  invalidData: 'Invalid Data!'\n};\n\nfunction descriptions(title, subtitle) {\n  return (\n    <div>\n      <p className=\"title\">{title}</p>\n      <p className=\"title-border-bottom\" />\n      <p className=\"subtitle\">{subtitle}</p>\n    </div>\n  );\n}\n\nfunction contactDetails() {\n  return (\n    <div>\n      <div className=\"icon-info-container\">\n        <img src={phone} className=\"details-icon\" alt=\"phone-icon\" />\n        <p className=\"details-number\">+1 999 999 999</p>\n      </div>\n      <div className=\"icon-info-container\">\n        <img src={mail} className=\"details-icon\" alt=\"mail-icon\" />\n        <p className=\"details-email\">info@linkinfirm.com</p>\n      </div>\n      <div className=\"icon-info-container\">\n        <img src={location} className=\"details-icon\" alt=\"location-icon\" />\n        <p className=\"details-address\">\n          851 NE 1st Ave - # 1108 Miami, Florida 33132 - USA\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction textFields(yourName, yourPhone, email, message) {\n  return (\n    <div className=\"email-fields-container\">\n      <div className=\"email-fields-rules name-field\">\n        <label htmlFor=\"name\">{yourName}</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          className=\"input-email-phone-name-fields\"\n        />\n      </div>\n      <div className=\"email-fields-rules phone-field\">\n        <label htmlFor=\"phone\">{yourPhone}</label>\n        <input\n          id=\"phone\"\n          type=\"text\"\n          className=\"input-email-phone-name-fields\"\n        />\n      </div>\n      <div className=\"email-fields-rules email-field\">\n        <label htmlFor=\"email\">{email}</label>\n        <input\n          id=\"email\"\n          type=\"text\"\n          className=\"input-email-phone-name-fields\"\n        />\n      </div>\n      <div className=\"email-fields-rules message-field\">\n        <label htmlFor=\"message\">{message}</label>\n        <input id=\"message\" type=\"text\" />\n      </div>\n    </div>\n  );\n}\n\nfunction buttonMessage(text) {\n  return <button className=\"btn-send-msg\">{text}</button>;\n}\n\nasync function sendEmail(event) {\n  event.preventDefault();\n  const { target } = event;\n  const objToSend = {\n    userName: target[0],\n    userPhone: target[1],\n    userEmail: target[2],\n    message: target[3],\n  };\n  const result = await fetch(`http://url-will-be-here`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(objToSend),\n  }).then(res => res.json());\n  if (result.message) {\n    return alert()\n  }\n}\n\nfunction emailContainer({ yourName, yourPhone, email, message, sendMessage }) {\n  return (\n    <div className=\"email-container\">\n      <form className=\"email-box\" onSubmit={e => sendEmail(e)}>\n        {textFields(yourName, yourPhone, email, message)}\n        <div className=\"btn-send-msg-container\">\n          {buttonMessage(sendMessage)}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction descriptionsAndDetailsContainer({ title, subtitle }) {\n  return (\n    <div className=\"description-and-details-container\">\n      {descriptions(title, subtitle)}\n      {contactDetails()}\n    </div>\n  );\n}\n\nfunction contactBody(texts) {\n  return (\n    <div className=\"contact-body\">\n      {descriptionsAndDetailsContainer(texts)}\n      {emailContainer(texts)}\n    </div>\n  );\n}\n\nfunction Contact() {\n  const {\n    location: { pathname },\n  } = window;\n  const namePages = pathname.includes('/en') ? englishTexts : portugueseTexts;\n\n  return (\n    <div>\n      <Header />\n      <div className=\"contact-container\">{contactBody(namePages)}</div>\n    </div>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}